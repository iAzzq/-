// ==================== PP[10] ====================
// PP[10] - 输送带控制功能块
// 步骤说明 (步号按10的倍数递增):
//   10: 输送带停 (原1)
//   20: 推料气缸到原点 (原2)
//   1000: 最终完成步
//   0: idle状态


cmd输送带停 := FALSE;
cmd推料气缸到原点 := FALSE;
FCO_START[10] := FALSE;
CASE PP[10].StepNo OF
    0:  // idle状态
        PP[10].DelayTime := 100;
        PP[10].NextStepNo := 0;
        PP[10].Condition := FALSE;
        
        IF CMD_START[10] THEN
            PP[10].NextStepNo := 10;
            PP[10].Condition := TRUE;
        END_IF;
        
    10: // 输送带停 (原1→10)
        cmd输送带停 := TRUE;
        PP[10].DelayTime := 100;
        PP[10].NextStepNo := 20;
        PP[10].Condition := fco输送带停;
        
    20: // 推料气缸到原点 (原2→20)
        cmd推料气缸到原点 := TRUE;
        PP[10].DelayTime := 100;
        PP[10].NextStepNo := 1000;
        PP[10].Condition := fco推料气缸到原点;
        
    1000: // 最终完成步
		FCO_START[10] := TRUE;
        PP[10].DelayTime := 100;
        PP[10].NextStepNo := 0;
        PP[10].Condition := NOT CMD_START[10];
END_CASE;

// ==================== PP[11] ====================
// PP[11] - 取料输送控制功能块
// 步骤说明 (步号按10的倍数递增):
//   10: 等待取料 (原1)
//   20: 输送 (原2)
//   30: 推料 (原3)
//   40: 输送到达 (原4)
//   1000: 最终完成步


cmd等待取料 := FALSE;
cmd输送 := FALSE;
cmd推料 := FALSE;
cmd输送到达 := FALSE;
FCO_START[11] := FALSE;
CASE PP[11].StepNo OF
    0:  // idle状态
        PP[11].DelayTime := 100;
        PP[11].NextStepNo := 0;
        PP[11].Condition := FALSE;
        
        IF CMD_START[11] THEN
            PP[11].NextStepNo := 10;
            PP[11].Condition := TRUE;
        END_IF;
        
    10: // 等待取料 (原1→10)
        cmd等待取料 := TRUE;
        PP[11].DelayTime := 100;
        PP[11].NextStepNo := 20;
        PP[11].Condition := fco等待取料;
        
    20: // 输送 (原2→20)
        cmd输送 := TRUE;
        PP[11].DelayTime := 100;
        PP[11].NextStepNo := 30;
        PP[11].Condition := fco输送;
        
    30: // 推料 (原3→30)
        cmd推料 := TRUE;
        PP[11].DelayTime := 100;
        PP[11].NextStepNo := 40;
        PP[11].Condition := fco推料;
        
    40: // 输送到达 (原4→40)
        cmd输送到达 := TRUE;
        PP[11].DelayTime := 100;
        PP[11].NextStepNo := 1000;
        PP[11].Condition := fco输送到达;
        
    1000: // 最终完成步
		FCO_START[11] := TRUE;
        PP[11].DelayTime := 100;
        PP[11].NextStepNo := 0;
        PP[11].Condition := NOT CMD_START[11];
END_CASE;

// ==================== PP[20] ====================
// PP[20] - 底盖控制功能块
// 步骤说明 (步号按10的倍数递增):
//   10: 底盖夹料到原点 (原1)
//   20: 底盖安装到原点 (原2)
//   30: 底盖旋转到原点 (原3)
//   1000: 最终完成步
// ==================== PP[20] ====================
// PP[20] - 底盖原点控制功能块
// 步骤说明 (步号按10的倍数递增):
//   10: 底盖夹料到原点 (原1)
//   20: 底盖安装到原点 (原2)
//   30: 底盖旋转到原点 (原3)
//   1000: 最终完成步
//   0: idle状态

cmd底盖夹料到原点 := FALSE;
cmd底盖安装到原点 := FALSE;
cmd底盖旋转到原点 := FALSE;
FCO_START[20] := FALSE;

CASE PP[20].StepNo OF
    0:  // idle状态
        PP[20].DelayTime := 100;
        PP[20].NextStepNo := 0;
        PP[20].Condition := FALSE;
        
        IF CMD_START[20] THEN
            PP[20].NextStepNo := 10;
            PP[20].Condition := TRUE;
        END_IF;
        
    10: // 底盖夹料到原点 (原1→10)
        cmd底盖夹料到原点 := TRUE;
        PP[20].DelayTime := 100;
        PP[20].NextStepNo := 20;
        PP[20].Condition := fco底盖夹料到原点;
        
    20: // 底盖安装到原点 (原2→20)
        cmd底盖安装到原点 := TRUE;
        PP[20].DelayTime := 100;
        PP[20].NextStepNo := 30;
        PP[20].Condition := fco底盖安装到原点;
        
    30: // 底盖旋转到原点 (原3→30)
        cmd底盖旋转到原点 := TRUE;
        PP[20].DelayTime := 100;
        PP[20].NextStepNo := 1000;
        PP[20].Condition := fco底盖旋转到原点;
        
    1000: // 最终完成步
        FCO_START[20] := TRUE;
        PP[20].DelayTime := 100;
        PP[20].NextStepNo := 0;
        PP[20].Condition := NOT CMD_START[20];
END_CASE;

// ==================== PP[21] ====================
// PP[21] - 底盖运动控制功能块
// 步骤说明 (步号按10的倍数递增):
//   10: 底盖安装到动点 (原1)
//   20: 底盖夹料到动点 (原2)
//   30: 底盖旋转到动点 (原3)
//   40: 底盖安装到动点 (原4)
//   50: 底盖夹料到原点 (原5)
//   60: 底盖安装到原点 (原6)
//   70: 底盖旋转到原点 (原7)
//   1000: 最终完成步
//   0: idle状态

cmd底盖安装到动点 := FALSE;
cmd底盖夹料到动点 := FALSE;
cmd底盖旋转到动点 := FALSE;
cmd底盖夹料到原点 := FALSE;
cmd底盖安装到原点 := FALSE;
cmd底盖旋转到原点 := FALSE;
FCO_START[21] := FALSE;

CASE PP[21].StepNo OF
    0:  // idle状态
        PP[21].DelayTime := 100;
        PP[21].NextStepNo := 0;
        PP[21].Condition := FALSE;
        
        IF CMD_START[21] THEN
            PP[21].NextStepNo := 10;
            PP[21].Condition := TRUE;
        END_IF;
        
    10: // 底盖安装到动点 (原1→10)
        cmd底盖安装到动点 := TRUE;
        PP[21].DelayTime := 100;
        PP[21].NextStepNo := 20;
        PP[21].Condition := fco底盖安装到动点;
        
    20: // 底盖夹料到动点 (原2→20)
        cmd底盖夹料到动点 := TRUE;
        PP[21].DelayTime := 100;
        PP[21].NextStepNo := 30;
        PP[21].Condition := fco底盖夹料到动点;
        
    30: // 底盖旋转到动点 (原3→30)
        cmd底盖旋转到动点 := TRUE;
        PP[21].DelayTime := 100;
        PP[21].NextStepNo := 40;
        PP[21].Condition := fco底盖旋转到动点;
        
    40: // 底盖安装到动点 (原4→40)
        cmd底盖安装到动点 := TRUE;
        PP[21].DelayTime := 100;
        PP[21].NextStepNo := 50;
        PP[21].Condition := fco底盖安装到动点;
        
    50: // 底盖夹料到原点 (原5→50)
        cmd底盖夹料到原点 := TRUE;
        PP[21].DelayTime := 100;
        PP[21].NextStepNo := 60;
        PP[21].Condition := fco底盖夹料到原点;
        
    60: // 底盖安装到原点 (原6→60)
        cmd底盖安装到原点 := TRUE;
        PP[21].DelayTime := 100;
        PP[21].NextStepNo := 70;
        PP[21].Condition := fco底盖安装到原点;
        
    70: // 底盖旋转到原点 (原7→70)
        cmd底盖旋转到原点 := TRUE;
        PP[21].DelayTime := 100;
        PP[21].NextStepNo := 1000;
        PP[21].Condition := fco底盖旋转到原点;
        
    1000: // 最终完成步
        FCO_START[21] := TRUE;
        PP[21].DelayTime := 100;
        PP[21].NextStepNo := 0;
        PP[21].Condition := NOT CMD_START[21];
END_CASE;
